#summary M2 version FAQ.

= Introduction =

These are commonly encountered questions regarding the M2 version of GWT-Maven. 

= Details =

*Q)  I'm having problems compiling multi-module GWT applications.  How do I make it work?

When building client code, the GWT compiler, not only needs bytecode for dependent classes, but also needs access to the source code.  This means any GWT modules your module depends on will need to have the source code packaged in it.  The easiest way to do this is to use the `resources` section of your POM's `build` stanza.  e.g.

{{{
<build>
   <!-- All your plugins are here -->

   <resources>
    <resource>
      <directory>src/main/java</directory>
    </resource>
  </resources>
</build>  
}}}

another way to do this is to use the antrun plugin

{{{
<build>
  <plugins>
  ...
    <plugin>
      <artifactId>maven-antrun-plugin</artifactId>
      <executions>
        <execution>
          <phase>process-classes</phase>
          <configuration>
            <tasks>
              <copy todir="${project.build.outputDirectory}">
                <fileset dir="${project.build.sourceDirectory}">
                  <include name="**/*.java" />
                </fileset>
              </copy>
            </tasks>
          </configuration>
          <goals>
            <goal>run</goal>
          </goals>
        </execution>
      </executions>
    </plugin>
  ...
  </plugins>
</build>

}}}


*Q)  How does testGwt work?

If you have GwtTestCase based tests, the testGwt goal can run them independently from the standard Maven Surefire plugin. This separate test run is required to get the classpath for the JUnitShell properly configured. 

To use this support run "mvn test" and make sure you have some GwtTestCase derived tests that are named with the "GwtTest" PREFIX.  If you want to change the test name prefix you can set the "testFilter" configuration parameter.  

When you run "mvn test" the Surefire plugin will be invoked to run your {{{*Test}}} named standard tests, and then gwt:testGwt will be run to handle your {{{GwtTest*}}} named tests. 