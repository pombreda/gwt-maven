GWT-Maven Setup

  In order to use GWT-Maven, you will need to have your POM pointing to the right plugin
repository (so the plugin can be downloaded by Maven), and you will need to decide how you want to handle
GWT being present. 


*  Getting the Plugin

  Getting the plugin is simple.  You just need to add a new pluginRepository to your POM.  An example, using the
repository from the gwt-maven project (a good one to start with ):

+--
<pluginRepositories>
    <pluginRepository>
      <id>gwt-maven</id>
      <url>http://gwt-maven.googlecode.com/svn/trunk/mavenrepo</url>
    </pluginRepository>
  </pluginRepositories>
+--



*  Getting GWT Installed

  you need to have GWT installed.  There are two ways you can do this.

    [[1]]  Download and unpack GWT yourself and set the google.webtoolkit.home property to the location where it is installed (manual mode)
    
    [[1]]  Use the setup and extract goals from the plugin to automatically have GWT downloaded and google.webtoolkit.home established (automatic mode)



* Manual Setup

  If you are going to setup GWT manually, you will need to first download GWT, and unpackage it (http://code.google.com/webtoolkit/download.html).

  Then, you will need to set-up profiles in order to establish google.webtoolkit.home as the location where you unpacked GWT.

  Finally, you will need to add the proper GWT jar files as your dependencies.

  First you need to setup a profile (this can be in your POM for a particular project, or across a machine for all projects
  on a per user basis in your user settings.xml - ~/.m2/settings.xml).
   
  For example:

+--
 <?xml version="1.0" encoding="UTF-8"?>
 <settings>
   <profiles>
     <profile>
       <id>gwt-1.4.61-mac</id>
       <properties>
         <google.webtoolkit.home>/opt/gwt-mac-1.4.61</google.webtoolkit.home>
          <!-- XstartOnFirstThread needed only on the mac -->
         <google.webtoolkit.extrajvmargs>-Xmx512m -XstartOnFirstThread</google.webtoolkit.extrajvmargs>
       </properties>
     </profile>
   </profiles>
   <activeProfiles>
     <activeProfile>gwt-1.4.61-mac</activeProfile>
   </activeProfiles>
</settings>
+--

  With the manual mode it is critical that you have google.webtoolkit.home configured properly (using the correct GWT version for your platform). 

  Alternatively, you can setup a standard place for GWT to be installed, and add platform specific profiles to your POM, 
  which are activated based on the environment (the platform in use - this makes your setup work across different platforms, 
  so long as they each have GWT installed at the specified location).
  
  For example:

  TODO - remove the dev dep from each profile and instead just set "platform" property, reference that in regular dep 

+--
<profiles>
    <!-- Note - env var GWT_HOME is set to where GWT is installed for the platform, for example /opt/gwt-mac-1.4.61 -->
    <profile>
      <id>gwt-1.4.61-mac</id>
      <activation>
        <os>
          <family>mac</family>
        </os>
      </activation>
      <properties>        
        <google.webtoolkit.home>${env.GWT_HOME}</google.webtoolkit.home>
        <!-- XstartOnFirstThread needed only on the mac -->
        <google.webtoolkit.extrajvmargs>-Xmx512m -XstartOnFirstThread</google.webtoolkit.extrajvmargs>
      </properties>
      <dependencies>
            <dependency>
                <groupId>com.google.gwt</groupId>
                <artifactId>gwt-dev-mac</artifactId>
                <version>1.4.61</version>
                <scope>system</scope>
                <systemPath>${google.webtoolkit.home}/gwt-dev-mac.jar</systemPath>
            </dependency>
        </dependencies>
    </profile>
    <profile>
      <id>gwt-1.4.61-linux</id>
      <activation>
        <os>
          <name>Linux</name>
        </os>
      </activation>
      <properties>
        <google.webtoolkit.home>${env.GWT_HOME}</google.webtoolkit.home>
      </properties>
      <dependencies>
            <dependency>
                <groupId>com.google.gwt</groupId>
                <artifactId>gwt-dev-linux</artifactId>
                <version>1.4.61</version>
                <scope>system</scope>
                <systemPath>${google.webtoolkit.home}/gwt-dev-linux.jar</systemPath>
            </dependency>
        </dependencies>
    </profile>
    <profile>
      <id>gwt-1.4.61-windows</id>
      <activation>
        <os>
          <family>windows</family>
        </os>
      </activation>
      <properties>
        <google.webtoolkit.home>${env.GWT_HOME}</google.webtoolkit.home>
      </properties>
      <dependencies>
          <dependency>
              <groupId>com.google.gwt</groupId>
              <artifactId>gwt-dev-windows</artifactId>
              <version>1.4.61</version>
              <scope>system</scope>
              <systemPath>${google.webtoolkit.home}/gwt-dev-windows.jar</systemPath>
          </dependency>
      </dependencies>
    </profile>
  </profiles>
+--

  Above, you see a three profiles that get activated depending on what platform they are running on.

  You also need to add the gwt-maven repository, and other GWT dependencies to your project.

  For example:

  TODO update to using central repo, change names, etc

+--

<repository>
   <id>gwt-maven</id>
   <url>http://gwt-maven.googlecode.com/svn/trunk/mavenrepo/</url>
 </repository>

 <dependencies>
     <dependency>
         <groupId>junit</groupId>
         <artifactId>junit</artifactId>
         <version>3.8.1</version>
         <scope>test</scope>
     </dependency>
     <dependency>
         <groupId>com.google.gwt</groupId>
         <artifactId>gwt-user</artifactId>
         <version>1.4.61</version>  
         <scope>provided</scope>       
     </dependency>
     <dependency>
         <groupId>com.google.gwt</groupId>
         <artifactId>gwt-servlet</artifactId>
         <version>1.4.61</version>
         <scope>runtime</scope>
     </dependency>
+--

    The gwt-maven repository provides gwt-user and gwt-servlet. You should remember to mark
    gwt-user as "provided" so it is not included in your WAR file.


    If you wish to use the PropertyChangeSupport on classes from the bean generator
    you should include GWTx in your project. This is also available in the gwt-maven
    repository.
+--
     <dependency>
         <groupId>com.googlecode.gwtx</groupId>
         <artifactId>GWTx</artifactId>
         <version>20070110</version>
     </dependency>
   </dependencies>

+--

    

* Automatic Setup

  If you are going to do automatic setup, you need to specify the gwtVersion property for the GWT-Maven plugin,
  and you need to enable the setup and extractGwt goals. 
  
  For example:

+--
    <plugins>
      <plugin>
        <groupId>com.totsp.gwt</groupId>
        <artifactId>maven-googlewebtoolkit2-plugin</artifactId>
        <version>2.0</version>
        <configuration>
          <gwtVersion>1.4.61</gwtVersion>
        </configuration>
        <executions>
          <execution>
            <goals>
              <!-- These two goals enable automatic GWT setup and extraction -->
              <goal>setup</goal>
              <goal>extractGwt</goal>
              
              <!-- these are the standard goals -->
              <goal>generateClientBeans</goal>
              <goal>mergewebxml</goal>
              <goal>compile</goal>
              <goal>testGwt</goal>
              <goal>gwt</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
+--
