GWT-Maven Testing Support

  One special aspect of GWT-Maven to be familiar with is that it runs its own special "test" goal
  during the "test" phase in order to support GWTTestCase derived GWT tests. 
  
  It's a long story as to why this is needed (having to do with classpath inspection and setup issues 
  inside GWTTestCase/JUnitShell), but the regular Maven Surefire testing plugin does not work for 
  GWTTestCase tests (at least not with any configuration we have tried, and we have given it a lot of 
  effort).  
  
  Using this special testing support though, requires that you know a few key things, as outlined below:

* GwtTest test name prefix filter
 
 Because you will likely want to run BOTH Surefire and GWT-Maven based tests 
 (for regular server side JUnit tests with Surefire, and for client model and controller tests with GWT)
 you need to distinguish these tests from each other. This is done using a naming convention.
 
 By default GWT-Maven looks for test classes that are named "GwtTest"Something.java - they
 START WITH "GwtTest."  Surefire looks for tests that are named Something"Test".java by default - they
 END WITH "Test." 
 
 Look at the full source for the 
 {{{http://gwt-maven.googlecode.com/svn/trunk/maven-googlewebtoolkit2-plugin/simplesample/}Simple sample}}
 and the 
 {{{http://gwt-maven.googlecode.com/svn/trunk/maven-googlewebtoolkit2-sample/}Full sample}} projects
 for reference. 
 
* GwtTest scripts

 Each test that is named with the GwtTest prefix and picked up and run by GWT-Maven is turned into a 
 script in the target/gwtTest directory and run. This is handy to know because you can re-run
 just these scripts for troubleshooting purposes. (This is the same MO as the compile and shell usage
 with GWT-Maven.) 

 
* Test results output

 Because GWT testing is different and is not run by Surefire, it also has different output. As well as 
 summary output to the console, detailed output for each GwtTest script ends up in the target/gwtTest directory. 
